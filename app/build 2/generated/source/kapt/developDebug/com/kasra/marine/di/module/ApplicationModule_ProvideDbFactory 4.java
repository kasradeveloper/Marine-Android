// Generated by Dagger (https://dagger.dev).
package com.kasra.marine.di.module;

import android.content.Context;
import com.kasra.marine.data.room.ApplicationDB;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideDbFactory implements Factory<ApplicationDB> {
  private final ApplicationModule module;

  private final Provider<Context> contextProvider;

  public ApplicationModule_ProvideDbFactory(ApplicationModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public ApplicationDB get() {
    return provideDb(module, contextProvider.get());
  }

  public static ApplicationModule_ProvideDbFactory create(ApplicationModule module,
      Provider<Context> contextProvider) {
    return new ApplicationModule_ProvideDbFactory(module, contextProvider);
  }

  public static ApplicationDB provideDb(ApplicationModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideDb(context));
  }
}
